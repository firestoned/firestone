openapi: 3.0.0
info:
  title: Example person and addressbook API
  description: An example API with more than one resource
  version: "1.0"
# https://www.jvt.me/posts/2022/05/29/openapi-json-patch/
components:
  schemas:
    addressbook:
      properties:
        addrtype:
          description: The address type, e.g. work or home
          enum:
          - work
          - home
          type: string
        city:
          description: The city of this address
          type: string
        country:
          description: The country of this address
          type: string
        person:
          $ref: '#/components/schemas/person'
        state:
          description: The state of this address
          type: string
        street:
          description: The street and civic number of this address
          type: string
      type: object
    person:
      properties:
        age:
          description: The person's age
          type: integer
        first_name:
          description: The person's first name
          type: string
        hobbies:
          description: The person's hobbies
          items:
            type: string
          type: array
        last_name:
          description: The person's last name
          type: string
      type: object
paths:
  /addressbook:
    delete:
      description: delete operation for /addressbook
      operationId: addressbook_delete
      parameters:
      - &id001
        description: Limit the number of responses back
        in: query
        name: limit
        schema:
          type: integer
      - &id002
        description: The offset to start returning resources
        in: query
        name: offset
        schema:
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressbook'
          description: Response for OK
      tags:
      - addressbook
    get:
      description: List all addresses in this addressbook
      operationId: addressbook_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - *id001
      - *id002
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/addressbook'
                type: array
          description: Response for OK
      tags:
      - addressbook
    head:
      description: Determine the existence and size of addresses in this addressbook
      operationId: addressbook_head
      parameters:
      - *id001
      - *id002
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    post:
      description: Create a new address in this addressbook, a new address key will
        be created
      operationId: addressbook_post
      parameters:
      - *id001
      - *id002
      requestBody:
        content:
          application/json:
            schema: &id003
              $ref: '#/components/schemas/addressbook'
        description: The request body for /addressbook
        required: true
      responses:
        201:
          content:
            application/json:
              schema: *id003
          description: Response for CREATED
      tags:
      - addressbook
  /addressbook/{address_key}:
    delete:
      description: delete operation for /addressbook/{address_key}
      operationId: addressbook_address_key_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressbook'
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}
      operationId: addressbook_address_key_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressbook'
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}
      operationId: addressbook_address_key_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}
      operationId: addressbook_address_key_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressbook'
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/addrtype:
    delete:
      description: delete operation for /addressbook/{address_key}/addrtype
      operationId: addressbook_address_key_addrtype_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id004
                description: The address type, e.g. work or home
                enum:
                - work
                - home
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/addrtype
      operationId: addressbook_address_key_addrtype_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id004
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/addrtype
      operationId: addressbook_address_key_addrtype_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/addrtype
      operationId: addressbook_address_key_addrtype_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id004
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/city:
    delete:
      description: delete operation for /addressbook/{address_key}/city
      operationId: addressbook_address_key_city_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id005
                description: The city of this address
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/city
      operationId: addressbook_address_key_city_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id005
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/city
      operationId: addressbook_address_key_city_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/city
      operationId: addressbook_address_key_city_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id005
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/country:
    delete:
      description: delete operation for /addressbook/{address_key}/country
      operationId: addressbook_address_key_country_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id006
                description: The country of this address
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/country
      operationId: addressbook_address_key_country_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id006
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/country
      operationId: addressbook_address_key_country_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/country
      operationId: addressbook_address_key_country_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id006
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/person:
    delete:
      description: delete operation for /addressbook/{address_key}/person
      operationId: addressbook_address_key_person_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - *id001
      - *id002
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person
      operationId: addressbook_address_key_person_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - *id001
      - *id002
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/person'
                type: array
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person
      operationId: addressbook_address_key_person_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - *id001
      - *id002
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    patch:
      description: patch operation for /addressbook/{address_key}/person
      operationId: addressbook_address_key_person_patch
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - *id001
      - *id002
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
    post:
      description: post operation for /addressbook/{address_key}/person
      operationId: addressbook_address_key_person_post
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - *id001
      - *id002
      requestBody:
        content:
          application/json:
            schema: &id007
              $ref: '#/components/schemas/person'
        description: The request body for /addressbook/{address_key}/person
        required: true
      responses:
        201:
          content:
            application/json:
              schema: *id007
          description: Response for CREATED
      tags:
      - addressbook
  /addressbook/{address_key}/person/{uuid}:
    delete:
      description: delete operation for /addressbook/{address_key}/person/{uuid}
      operationId: addressbook_address_key_person_uuid_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person/{uuid}
      operationId: addressbook_address_key_person_uuid_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person/{uuid}
      operationId: addressbook_address_key_person_uuid_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    patch:
      description: patch operation for /addressbook/{address_key}/person/{uuid}
      operationId: addressbook_address_key_person_uuid_patch
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/person/{uuid}
      operationId: addressbook_address_key_person_uuid_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/person/{uuid}/age:
    delete:
      description: delete operation for /addressbook/{address_key}/person/{uuid}/age
      operationId: addressbook_address_key_person_uuid_age_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id008
                description: The person's age
                type: integer
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person/{uuid}/age
      operationId: addressbook_address_key_person_uuid_age_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id008
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person/{uuid}/age
      operationId: addressbook_address_key_person_uuid_age_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/person/{uuid}/age
      operationId: addressbook_address_key_person_uuid_age_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id008
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/person/{uuid}/first_name:
    delete:
      description: delete operation for /addressbook/{address_key}/person/{uuid}/first_name
      operationId: addressbook_address_key_person_uuid_first_name_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id009
                description: The person's first name
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person/{uuid}/first_name
      operationId: addressbook_address_key_person_uuid_first_name_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id009
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person/{uuid}/first_name
      operationId: addressbook_address_key_person_uuid_first_name_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/person/{uuid}/first_name
      operationId: addressbook_address_key_person_uuid_first_name_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id009
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/person/{uuid}/hobbies:
    delete:
      description: delete operation for /addressbook/{address_key}/person/{uuid}/hobbies
      operationId: addressbook_address_key_person_uuid_hobbies_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id010
                description: The person's hobbies
                items:
                  type: string
                type: array
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person/{uuid}/hobbies
      operationId: addressbook_address_key_person_uuid_hobbies_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id010
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person/{uuid}/hobbies
      operationId: addressbook_address_key_person_uuid_hobbies_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/person/{uuid}/hobbies
      operationId: addressbook_address_key_person_uuid_hobbies_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id010
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/person/{uuid}/last_name:
    delete:
      description: delete operation for /addressbook/{address_key}/person/{uuid}/last_name
      operationId: addressbook_address_key_person_uuid_last_name_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id011
                description: The person's last name
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/person/{uuid}/last_name
      operationId: addressbook_address_key_person_uuid_last_name_get
      parameters:
      - in: query
        name: last_name
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id011
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/person/{uuid}/last_name
      operationId: addressbook_address_key_person_uuid_last_name_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/person/{uuid}/last_name
      operationId: addressbook_address_key_person_uuid_last_name_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id011
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/state:
    delete:
      description: delete operation for /addressbook/{address_key}/state
      operationId: addressbook_address_key_state_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id012
                description: The state of this address
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/state
      operationId: addressbook_address_key_state_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id012
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/state
      operationId: addressbook_address_key_state_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/state
      operationId: addressbook_address_key_state_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id012
          description: Response for OK
      tags:
      - addressbook
  /addressbook/{address_key}/street:
    delete:
      description: delete operation for /addressbook/{address_key}/street
      operationId: addressbook_address_key_street_delete
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: &id013
                description: The street and civic number of this address
                type: string
          description: Response for OK
      tags:
      - addressbook
    get:
      description: get operation for /addressbook/{address_key}/street
      operationId: addressbook_address_key_street_get
      parameters:
      - in: query
        name: city
        required: false
        schema:
          type: string
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id013
          description: Response for OK
      tags:
      - addressbook
    head:
      description: head operation for /addressbook/{address_key}/street
      operationId: addressbook_address_key_street_head
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default HEAD response
      tags:
      - addressbook
    put:
      description: put operation for /addressbook/{address_key}/street
      operationId: addressbook_address_key_street_put
      parameters:
      - in: path
        name: address_key
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema: *id013
          description: Response for OK
      tags:
      - addressbook
