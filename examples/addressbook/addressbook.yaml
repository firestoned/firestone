# Meta data: start
name: addressbook
description: An example of an addressbook resource
version: 1.0
version_in_path: false
default_query_params:
  - name: limit
    description: Limit the number of responses back
    in: query
    schema:
      type: integer
  - name: offset
    description: The offset to start returning resources
    in: query
    schema:
      type: integer
asyncapi:
  servers:
    dev:
      url: ws://localhost
      protocol: ws
      description: The development websocket server
  channels:
    resources: true
    instances: true
    instance_attrs: true
# Meta data: end
schema:
  type: array
  key:
    name: address_key
    description: A unique identifier for an addressbook entry.
    schema:
      type: string
  # You can limit the overall HTTP methods for the high level resource endpoint
  methods:
    - delete
    - get
    - head
    - post
    - put
  #responseCodes:
  # - 200
  # - 201
  query_params:
    - name: city
      description: Filter by city name
      required: false
      schema:
        type: string
      methods:
        - get
  descriptions:
    get: List all addresses in this addressbook
    head: Determine the existence and size of addresses in this addressbook
    patch: Patch one or more addresses in this addressbook
    post: Create a new address in this addressbook, a new address key will be created
  items:
    descriptions:
      get: Get a specific address from this addressbook
      head: Determine the existence and size of this address
      patch: Patch this address in the addressbook
      put: Put a new address in this addressbook, with the given address key
    type: object
    properties:
      # embeded person
      person_uuid:
        description: reference to the person's UUID, for this address
        type: string
      addrtype:
        description: The address type, e.g. work or home
        type: string
        # Don't expose this attribute in the URL/specification
        # expose: false
        enum:
          - work
          - home
      person:
        schema:
          $ref: "person.yaml#/schema"
      street:
        description: The street and civic number of this address
        type: string
      city:
        description: The city of this address
        type: string
      state:
        description: The state of this address
        type: string
      country:
        description: The country of this address
        type: string
