name: addressbook
description: An example of an addressbook resource
version: 1.0
version_in_path: false
default_query_params:
  - name: limit
    description: Limit the number of responses back
    in: params
    schema:
      type: integer
  - name: offset
    description: The offset to start returning resources
    in: params
    schema:
      type: integer
schema:
  type: array
  key:
    name: address_key
    description: A unique identitfier for an addressbook entry.
    schema:
      type: string
  # You can limit the overal HTTP methods for the high level resource endpoint
  #methods:
  #  - get
  #responseCodes:
  # - 200
  # - 201
  query_params:
    - name: city
      description: Filter by city name
      schema:
        type: string
      methods:
        - get
  descriptions:
    get: List all addresses in this addressbook
    head: Determine the existence and size of addresses in this addressbook
    patch: Patch one or more addresses in this addressbook
    post: Create a new address in this addressbook, a new address key will be created
  items:
    descriptions:
      get: Get a specific address from this addressbook
      head: Determine the existence and size of this address
      patch: Patch this address in the addressbook
      put: Put a new address in this addressbook, with the given address key
    type: object
    properties:
      person:
        # embeded person
        schema:
          type: array
          key:
            name: uuid
            description: A UUID associated to this person
            schema:
              type: string
          query_params:
            - name: last_name
              description: Filter by last name
              schema:
                type: string
              methods:
                - get
          descriptions:
            get: List all persons in this collection
            head: Determine the existence and size of persons in this collection
            patch: Patch one or more persons in this collection
            post: Create a new person in this collection, a new UUID key will be created
          items:
            descriptions:
              get: Get a specific person from this collection
              head: Determine the existence and size of this person
              patch: Patch this person in the collection
              put: Put a new person in this collection, with the given UUId key
            type: object
            properties:
              first_name:
                description: The person's first name
                type: string
                # Don't expose this attribute in the URL/specification
                # expose: false
              last_name:
                description: The person's last name
                type: string
              age:
                description: The person's age
                type: integer
      addrtype:
        description: The address type, e.g. work or home
        type: string
        # Don't expose this attribute in the URL/specification
        # expose: false
        enum:
          - work
          - home
      street:
        description: The street and civic number of this address
        type: string
      city:
        description: The city of this address
        type: string
      state:
        description: The state of this address
        type: string
      country:
        description: The country of this address
        type: string
